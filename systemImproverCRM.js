// ==UserScript==
// @name         S2 CRM ‚Äî –ø–∞–∫–µ—Ç —É–ª—É—á—à–µ–Ω–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
// @namespace    https://github.com/eliasreimer
// @version      2025.08.16
// @description  –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª CRM
// @author       Elias Reimer
// @match        https://crm.corp.skillbox.pro/*
// @grant        GM_xmlhttpRequest
// @grant        GM_notification
// @grant        GM_getValue
// @grant        GM_setValue
// @grant        GM_registerMenuCommand
// @connect      github.com
// @connect      api.github.com
// @connect      raw.githubusercontent.com
// @run-at       document-end
// ==/UserScript==

(function() {
    'use strict';

    const MODULES = [
        { name: "–î–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", url: "createdUpdatedDates.js" },
        { name: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç–∫—Å–ø–æ—Ä—Ç–µ", url: "whoExportedIt.js" },
        { name: "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ ID", url: "copyID.js" },
        { name: "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–∞", url: "viewingActivity.js" }
    ];

    const REPO_URL = "https://api.github.com/repos/eliasreimer/systemImproverCRM/contents/";
    const RAW_REPO_URL = "https://raw.githubusercontent.com/eliasreimer/systemImproverCRM/main/";

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    initLoader();

    function initLoader() {
        if (!window.S2_CRM) {
            window.S2_CRM = {
                version: "2025.08.16",
                modules: {},
                utils: {
                    loadModule,
                    showAlert,
                    getToken
                }
            };
        }

        if (getToken()) {
            loadAllModules();
        } else {
            promptForToken();
        }
    }

    function getToken() {
        return GM_getValue('s2_crm_token');
    }

    function promptForToken() {
        GM_registerMenuCommand("üîë –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å GitHub —Ç–æ–∫–µ–Ω", () => {
            const token = prompt("–í–≤–µ–¥–∏—Ç–µ GitHub Personal Access Token:", "");
            if (token) {
                GM_setValue('s2_crm_token', token.trim());
                showAlert("–¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω", "success");
                loadAllModules();
            }
        });
        
        showAlert(
            "–¢—Ä–µ–±—É–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è",
            "–î–ª—è —Ä–∞–±–æ—Ç—ã S2 CRM –Ω–µ–æ–±—Ö–æ–¥–∏–º GitHub —Ç–æ–∫–µ–Ω. –û—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é Tampermonkey –∏ –≤—ã–±–µ—Ä–∏—Ç–µ 'üîë –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å GitHub —Ç–æ–∫–µ–Ω'",
            "warning"
        );
    }

    async function loadAllModules() {
        showAlert("–ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π...", "info");
        
        for (const module of MODULES) {
            try {
                await loadModule(module);
            } catch (e) {
                console.error(`[S2 CRM] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${module.name}:`, e);
                showAlert(`–û—à–∏–±–∫–∞ –≤ –º–æ–¥—É–ª–µ ${module.name}`, e.message, "error");
            }
        }
    }

    function loadModule(module) {
        return new Promise((resolve, reject) => {
            GM_xmlhttpRequest({
                method: "GET",
                url: RAW_REPO_URL + module.url + "?t=" + Date.now(),
                timeout: 8000,
                onload: function(r) {
                    if (r.status === 200) {
                        try {
                            executeScript(r.responseText, module.name);
                            resolve();
                        } catch (e) {
                            reject(new Error(`–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${e.message}`));
                        }
                    } else {
                        reject(new Error(`HTTP ${r.status}: ${r.statusText}`));
                    }
                },
                onerror: reject,
                ontimeout: () => reject(new Error("–¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏"))
            });
        });
    }

    function executeScript(content, moduleName) {
        const script = document.createElement('script');
        script.textContent = `(function() { 
            try {
                ${content}
                console.log('[S2 CRM] –ú–æ–¥—É–ª—å "${moduleName}" —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω');
            } catch(e) {
                console.error('[S2 CRM] –û—à–∏–±–∫–∞ –≤ –º–æ–¥—É–ª–µ "${moduleName}":', e);
            }
        })();`;
        document.head.appendChild(script);
        script.remove();
    }

    function showAlert(title, message, type = "info") {
        const colors = {
            info: "#3498db",
            success: "#2ecc71",
            warning: "#f39c12",
            error: "#e74c3c"
        };
        
        GM_notification({
            title: `S2 CRM: ${title}`,
            text: message,
            highlight: true,
            timeout: type === "error" ? 8000 : 5000,
            image: `https://via.placeholder.com/64/${colors[type].slice(1)}/ffffff?text=${type[0].toUpperCase()}`
        });
    }
})();
